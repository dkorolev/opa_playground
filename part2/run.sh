#!/bin/bash
#
# Example run: `./step1.sh ~/Downloads/opa`.
OPA_BINARY=${1:-opa}
OPA_SERVER=${2:-http://localhost:8181}

$OPA_BINARY run --server -l error &
OPA_PID=$!
echo "OPA server started, PID $OPA_PID."

sleep 1
echo "Uploading the ACLs."
echo

echo -n 'Before ACLs upload, `opa` RAM usage: '
pmap $OPA_PID | tail -n 1
echo
 
echo -n 'ACLS size:                           '
ls -lash acls.json

time curl -s -X PUT $OPA_SERVER/v1/data/myapi/acl --data-binary @acls.json

echo
echo -n 'After ACLs upload, `opa` RAM usage: '
pmap $OPA_PID | tail -n 1
echo

echo 'Making sure the `acls.json` was uploaded correctly.'
echo -n 'LOCAL: '
cat acls.json | jq -S . | md5sum
echo -n 'OPA:   '
curl -s $OPA_SERVER/v1/data/myapi/acl | jq -S .result | md5sum

# NOTE(dkorolev): This part is not complete at the time of publishing, so I'm commenting it out.
# echo
# echo "Uploading the policy."
# curl -s -X PUT $OPA_SERVER/v1/policies/myapi --data-binary @policy.rego | jq .
# echo
# echo "Running the test queries."
# Run a bunch of [autogenerated] requests.
# OPA_SERVER=$OPA_SERVER ./requests.sh

# TODO(dkorolev): Is there a cleaner way to stop the OPA server?
echo
echo "Shutting down the OPA server."
kill $OPA_PID
wait
